# +
# -*- coding: utf-8 -*-
# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# pytx documentation build configuration file, created by
# Author:MengXuan Chen
# date:2024.3.28
# Institute:JSPI

import openpyxl
import os
# import xml.etree.ElementTree as ET
import pandas


# -

#xml标签统计模块
class XmlModule:
    def __init__(self,xml_path):
        self.codes=[] #存储常用的标签
        with open(r'xml_code.txt', 'r') as f:
            self.codes = f.readlines()
            for i in range(len(self.codes)):
                self.codes[i]=self.codes[i].rstrip('\n')
        self.count={}
        for code in self.codes:
            self.count[code]=[]
        self.xml_ls=xml_path #解压后所有安卓清单文件存储路径

    #如果标签出现，赋值为1
    def __count(self):
        for path in self.xml_ls:
            with open(path,'r', encoding='utf-8') as file_object:
                contets = file_object.read()
                for code in self.codes:
                    if code in contets:
                        self.count[code].append(1)
                    else:
                        self.count[code].append(0)
    
    #把数组给存到一张名为output.xlsx的excel表格中
    def __excel(self):
        workbook = openpyxl.Workbook()
        sheet = workbook.active
        workbook.save('output.xlsx')
        df = pandas.DataFrame(self.count)
        workbook = openpyxl.load_workbook('output.xlsx')
        sheet = workbook.active
        for i in range(len(self.codes)): #在该表格中插入数据
            sheet.cell(row=1,column=i+1,value=self.codes[i])
            for index, row in df.iterrows():
                sheet.cell(row=index+2,column=i+1,value=row[self.codes[i]])
        workbook.save('output.xlsx')

    def run(self):
        self.__count()
        self.__excel()


test=XmlModule([r"D:\Downloads\APK分析工具\7.案例\cmx\AndroidManifest.xml",r"D:\Downloads\APK分析工具\7.案例\样本2\AndroidManifest.xml"])

test.run()


